/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package telas;

import com.toedter.calendar.JCalendar;

import java.awt.Color;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JButton;
import javax.swing.GroupLayout;
import javax.swing.plaf.basic.BasicArrowButton;

/**
 *
 * author gutav
 */
public class NewJPanel extends javax.swing.JPanel {

    /**
     * Creates new form NewJPanel
     */
    public NewJPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        JCalendar calendar = new JCalendar(); // Cria o componente JCalendar

        // Remove as bordas de todos os bot√µes do DayChooser
        for (Component component : calendar.getDayChooser().getDayPanel().getComponents()) {
            if (component instanceof JButton) {
                
                ((JButton) component).addActionListener(new ActionListener() {
                    @Override
                    public void actionPerformed(ActionEvent e) {
                        JButton button = (JButton) e.getSource();
                        SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
                        Date selectedDate = calendar.getDate();
                        new telaCompromisso().setVisible(true);
                    }
                });
                
                
            }
        }
        for (Component component : calendar.getMonthChooser().getComponents()) {
            if (component instanceof BasicArrowButton) {
                ((BasicArrowButton) component).setBorderPainted(false);
                ((BasicArrowButton) component).setBackground(Color.WHITE);
                ((BasicArrowButton) component).setForeground(Color.BLUE);   
            }
        }
        for (Component component : calendar.getYearChooser().getComponents()) {
            if (component instanceof BasicArrowButton) {
                ((BasicArrowButton) component).setBorderPainted(false);
                
            }
        }


        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(calendar, javax.swing.GroupLayout.DEFAULT_SIZE, 480, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(calendar, javax.swing.GroupLayout.DEFAULT_SIZE, 360, Short.MAX_VALUE)
        );
    }// </editor-fold>
    
    // Variables declaration - do not modify                     
    // End of variables declaration                   
}
